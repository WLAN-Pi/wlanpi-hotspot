#! /bin/bash
#
# hotspot_switcher       script to switch hotspot on/off

NAME=hotspot_switcher
DESC="Script to switch hotspot on/off"
STATUS_FILE="/etc/wlanpi-state"
HOSTAPD_CONF_FILE="/etc/hostapd/hostapd.conf"
HOTSPOT_CONF_FILE="/etc/wlanpi-hotspot/conf/hostapd.conf"
NETWORKD_DIR=/etc/systemd/network
CLASSIC_MODE_NETWORK_DIR=/etc/systemd/network.classic
HOTSPOT_MODE_NETWORK_DIR=/etc/wlanpi-hotspot/etc/install/systemd/network

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 
   exit 1
fi


###############################################################################
#
# Activate hotspot:
#
#  1. Verify we're in classic mode
#  2. Ensure wlan0 supports AP mode
#  3. Create custom SSID if set to factory default
#  4. Create randomised PSK if not already done
#  5. Move networkd files in to place for new networking config after reboot
#  6. Disable wpa_supplicant services to prevent hostapd conflict after reboot 
#  7. Backup various existing files to allow restoration when hotspot
#     deactivated
#  8. Remove a number of existing files that need to be replaced
#  9. Create links from deleted file locations to hotspot config files
# 10. Enable hotspot service to be active after reboot
# 11. Create status file to indicate hotspot is active
# 12. Reboot the wlanpi to ensure clean activation
#
###############################################################################
hotspot_on () {

  echo "Starting switch from classic mode to hostpot mode"

  # check what state the WLAN Pi is in classic mode
  PI_STATUS=`cat $STATUS_FILE | grep 'classic'` || true
  if  [ -z "$PI_STATUS" ]; then
     echo "Failed - WLAN Pi is not in classic mode."
     exit 1
  fi

  # check if the WLAN NIC supports AP mode before switching
  # iw list | awk '/Supported interface modes/, /Band/' | grep '\* AP'
   AP_SUPPORT=`iw list | awk '/Supported interface modes/, /Band/' | grep '\* AP'` || true
   if  [ -z "$AP_SUPPORT" ]; then
     echo "Failed - AP Mode not supported by adapter."
     exit 1
  fi

  # check if we are using the factory shipped SSID, rename if we are
  echo "Checking for factory default SSID name"
  if grep -q "ssid=WLAN Pi Default SSID" $HOTSPOT_CONF_FILE; then
    echo "Creating a unique SSID as using default SSID"

    # Get the last 3 chars of eth0 MAC address
    LAST_3_CHARS_MAC=$(sed s/://g /sys/class/net/eth0/address | grep -o '...$')

    # Check if we got 3 chars
    if [ ${#LAST_3_CHARS_MAC} -ne 3 ]; then
      echo "Failed parsing eth0 MAC address during unique SSID creation"
      exit 1
    fi

    # Configure the unique SSID
    sudo sed -i "s/^#\?ssid=.*/ssid=WLAN Pi $LAST_3_CHARS_MAC/" $HOTSPOT_CONF_FILE

  else
    echo "SSID already customized, ignoring."
  fi

  # check if we are using the factory shipped WPA2 passphrase, re-gen if we are
  echo "Checking for factory default WPA2 passphrase"
  if grep -q "wpa_passphrase=WL@NP123" $HOTSPOT_CONF_FILE; then
    echo "Generating a random WPA2 passphrase"
    PASSPHRASE=$(tr -dc 'A-Ha-h2-9-J-Kj-k2-9-M-Nm-n2-9-P-Zp-z2-9' </dev/urandom | head -c 12  ; echo)

    # substitute in new random pwd
    sudo sed -i "s/^#\?wpa_passphrase=.*/wpa_passphrase=$PASSPHRASE/" $HOTSPOT_CONF_FILE

  else
    echo "WPA2 passphrase already customized, ignoring."
  fi

  echo "Enabling hotspot..."

  # move classic mode network files to own networkd dir
  sudo mv $NETWORKD_DIR/*.net* $CLASSIC_MODE_NETWORK_DIR

  # move hotspot mode files in to live networkd dir
  sudo mv $HOTSPOT_MODE_NETWORK_DIR/*.net* $NETWORKD_DIR 

  # Disable wpa_supplicant to prevent conflict with hostapd
  sudo systemctl disable wpa_supplicant@wlan0.service
  sudo systemctl disable wpa_supplicant@wlan1.service

  #Backup existing config files
  echo "Backing up existing config files..."
  cp /etc/sysctl.conf /etc/sysctl.conf.hspt
  cp /etc/default/ufw /etc/default/ufw.hspt
  cp /etc/ufw/before.rules /etc/ufw/before.rules.hspt
  # This file may or may not exist
  if [ -e "$HOSTAPD_CONF_FILE" ]; then
    cp $HOSTAPD_CONF_FILE "${HOSTAPD_CONF_FILE}.hspt"
  fi
  # Remove existing config files
  echo "Removing existing config files..."
  rm /etc/sysctl.conf
  rm /etc/default/ufw
  rm /etc/ufw/before.rules
  # This file may or may not exist
  if [ -e "$HOSTAPD_CONF_FILE" ]; then
    rm $HOSTAPD_CONF_FILE
  fi
  # Link to hotspot config files
  echo "Creating links to config files..."
  ln -s $HOTSPOT_CONF_FILE $HOSTAPD_CONF_FILE
  ln -s /etc/wlanpi-hotspot/sysctl/sysctl.conf /etc/sysctl.conf
  ln -s /etc/wlanpi-hotspot/default/ufw /etc/default/ufw
  ln -s /etc/wlanpi-hotspot/ufw/before.rules /etc/ufw/before.rules

  # Enable services to start after reboot
  systemctl enable hostapd

  # Signal that hotspot active
  echo "hotspot" > $STATUS_FILE
  echo "WLANPi will now reboot"
  sleep 1
  sync
  reboot
}

###############################################################################
#
# Deactivate hotspot:
#
# 1. Check we're in hotspot mode
# 2. Move classic mode networkd files back into place
# 3. Re-enable wpa_supplicant services
# 4. Remove links created during activation
# 5. Restore config files backed up during activation
# 6. Disable hostapd
# 4. Remove status file to indicate hotspot no longer active
# 5. Reboot wlanpi to provide clean restoration of services
#
###############################################################################
hotspot_off () {

  # check what state the WLAN Pi is in
  PI_STATUS=`cat $STATUS_FILE | grep 'hotspot'` || true
  if  [ -z "$PI_STATUS" ]; then
     echo "Failed - WLAN Pi is not in hotspot mode."
     exit 1
  fi

  echo "Starting switch from hotspot mode to classic mode"

  # move hotspot mode network files to own networkd dir
  sudo mv $NETWORKD_DIR/*.net* $HOTSPOT_MODE_NETWORK_DIR

  # move classic mode files in to live networkd dir
  sudo mv $CLASSIC_MODE_NETWORK_DIR/*.net* $NETWORKD_DIR

  # Enable wpa_supplicant services
  sudo systemctl enable wpa_supplicant@wlan0.service
  sudo systemctl enable wpa_supplicant@wlan1.service

  # Remove links to config files
  echo "Removing links to config files..."
  unlink $HOSTAPD_CONF_FILE
  unlink /etc/sysctl.conf
  unlink /etc/default/ufw
  unlink /etc/ufw/before.rules

  # Restore original config files
  echo "Restoring original config files..."
  cp /etc/sysctl.conf.hspt /etc/sysctl.conf
  cp /etc/default/ufw.hspt /etc/default/ufw
  cp /etc/ufw/before.rules.hspt /etc/ufw/before.rules

  # This file may or may not exist
  if [ -e "${HOSTAPD_CONF_FILE}.hspt" ]; then
    cp "${HOSTAPD_CONF_FILE}.hspt" $HOSTAPD_CONF_FILE
  fi

  # Disable services to start after reboot
  systemctl disable hostapd
  
  echo "WLAN Pi will now reboot"
  echo "classic" > $STATUS_FILE
  sleep 1
  sync
  reboot
}

status () {
  PI_STATUS=`cat $STATUS_FILE | grep 'hotspot'` || true
  if  [ -z "$PI_STATUS" ]; then
    echo "hotspot is currently disabled"
    exit 0
  else
    echo "hotpot is currently enabled"
    exit 0
  fi

}

version () {
    N=/etc/wlanpi-hotspot/$NAME
        echo "Version: $N $VERSION" >&2
        exit 1

}

case "$1" in
  on)
        hotspot_on
        ;;
  off)
        hotspot_off
        ;;
  status)
        status
        ;;
  version)
        version;;
  *)
        N=/etc/wlanpi-hotspot/$NAME
        echo "Usage: $N {on|off|status|version}" >&2
        exit 1
        ;;
esac

exit 0

